{
    "name": "asp-net-core-switcher",
    "displayName": "ASP.NET Core Switcher",
    "description": "Quickly switch between views, controllers, pages and page models in ASP.NET Core using keybindings, context menu or command palette.",
    "publisher": "adrianwilczynski",
    "repository": {
        "type": "git",
        "url": "https://github.com/AdrianWilczynski/AspNetCoreSwitcher.git"
    },
    "icon": "img/logo.png",
    "version": "1.0.0",
    "engines": {
        "vscode": "^1.32.0"
    },
    "categories": [
        "Other"
    ],
    "keywords": [
        "ASP.NET Core",
        ".NET Core",
        "Razor Pages",
        "MVC",
        "C#",
        "CSharp",
        "Razor",
        "Keybindings",
        "Keybinding",
        "Switch",
        "Switcher",
        "Navigate",
        "Navigation",
        "Jump",
        "Open"
    ],
    "activationEvents": [
        "onLanguage:csharp",
        "onLanguage:razor",
        "onLanguage:aspnetcorerazor"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "extension.goToView",
                "title": "Go to View"
            },
            {
                "command": "extension.goToController",
                "title": "Go to Controller"
            },
            {
                "command": "extension.addView",
                "title": "Add View..."
            },
            {
                "command": "extension.goToPage",
                "title": "Go to Page"
            },
            {
                "command": "extension.goToPageModel",
                "title": "Go to PageModel"
            }
        ],
        "keybindings": [
            {
                "command": "extension.goToView",
                "key": "alt+i",
                "when": "editorTextFocus && resourceScheme == file && resourceFilename=~ /.*(?<!\\.cshtml)\\.cs$/ && isController"
            },
            {
                "command": "extension.goToController",
                "key": "alt+i",
                "when": "resourceScheme == file && resourceFilename=~ /.*\\.cshtml$/ && isView"
            },
            {
                "command": "extension.addView",
                "key": "alt+p",
                "when": "editorTextFocus && resourceScheme == file && resourceFilename=~ /.*(?<!\\.cshtml)\\.cs$/ && isController"
            },
            {
                "command": "extension.goToPage",
                "key": "alt+o",
                "when": "editorTextFocus && resourceScheme == file && resourceFilename=~ /.*\\.cshtml\\.cs$/ && isPageModel"
            },
            {
                "command": "extension.goToPageModel",
                "key": "alt+o",
                "when": "resourceScheme == file && resourceFilename=~ /.*\\.cshtml$/ && isPage"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "extension.goToView",
                    "group": "navigation",
                    "when": "editorTextFocus && resourceScheme == file && resourceFilename=~ /.*(?<!\\.cshtml)\\.cs$/  && isController"
                },
                {
                    "command": "extension.goToController",
                    "group": "navigation",
                    "when": "resourceScheme == file && resourceFilename=~ /.*\\.cshtml$/ && isView"
                },
                {
                    "command": "extension.addView",
                    "group": "1_modification",
                    "when": "editorTextFocus && resourceScheme == file && resourceFilename=~ /.*(?<!\\.cshtml)\\.cs$/ && isController"
                },
                {
                    "command": "extension.goToPage",
                    "group": "navigation",
                    "when": "resourceScheme == file && resourceFilename=~ /.*\\.cshtml\\.cs$/ && isPageModel"
                },
                {
                    "command": "extension.goToPageModel",
                    "group": "navigation",
                    "when": "resourceScheme == file && resourceFilename=~ /.*\\.cshtml$/ && isPage"
                }
            ],
            "commandPalette": [
                {
                    "command": "extension.goToView",
                    "when": "editorHasSelection && resourceScheme == file && resourceFilename=~ /.*(?<!\\.cshtml)\\.cs$/ && isController"
                },
                {
                    "command": "extension.goToController",
                    "when": "resourceScheme == file && resourceFilename=~ /.*\\.cshtml$/ && isView"
                },
                {
                    "command": "extension.addView",
                    "when": "editorHasSelection && resourceScheme == file && resourceFilename=~ /.*(?<!\\.cshtml)\\.cs$/ && isController"
                },
                {
                    "command": "extension.goToPage",
                    "when": "resourceScheme == file && resourceFilename=~ /.*\\.cshtml\\.cs$/ && isPageModel"
                },
                {
                    "command": "extension.goToPageModel",
                    "when": "resourceScheme == file && resourceFilename=~ /.*\\.cshtml$/ && isPage"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "@types/chai": "^4.1.7",
        "@types/mocha": "^2.2.42",
        "@types/node": "^10.12.21",
        "chai": "^4.2.0",
        "tslint": "^5.12.1",
        "typescript": "^3.3.1",
        "vscode": "^1.1.28"
    }
}
